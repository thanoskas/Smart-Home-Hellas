substitutions:
  name: "shh-mon-plus"
  friendly_name: "SHH MONplus"
  project_name: "Smart Home Hellas.SHH-MON+"
  project_version: "4.0"
  device_description: "Smart Home Hellas Monitoring+ Device"



esphome:
  name: "${name}"
  name_add_mac_suffix: true
  project:
    name: ${project_name}
    version: ${project_version}
    

esp32:
  board: esp32dev
  framework:
    type: esp-idf

dashboard_import:
  package_import_url: github://thanoskas/Smart-Home-Hellas/shh-mon-plus.yaml@main
  import_full_config: true


# Enable logging
logger:
  level: DEBUG

# Example configuration entry for debug
#debug:
#  update_interval: 5s


# Enable Home Assistant API
api:
   reboot_timeout: 0s #360min


wifi:
#  use_address: 192.168.31.111
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password 

  ap:



# Example configuration entry for debug
#debug:
#  update_interval: 5s

captive_portal:

#esp32_improv:
#  authorizer: none

http_request:
  verify_ssl: false

ota:
  - platform: esphome
  - platform: http_request

web_server:
  version: 3
  local: true
  port: 80
  auth:
#    username: admin
#    password: "12345678"


status_led:
  pin:
    inverted: true
    number: GPIO2    


i2c:
  sda: 21
  scl: 22
  scan: true
#  frequency: 800khz
#  timeout: 10ms

one_wire:
  - platform: gpio
    pin: GPIO23


#spi:
#  miso_pin: GPIO12  #SDO connects to the SPI miso_pin
#  mosi_pin: GPIO13  #SDI connects to the SPI mosi_pin
#  clk_pin: GPIO14   #CLK connects to the SPI clk_pin


################################# R485 HAT ##############################################

# Example configuration entry
#uart:
#  id: uart_id
#  rx_pin: GPIO26
#  tx_pin: GPIO25
#  baud_rate: 9600 
#  stop_bits: 1
#  debug:


#modbus:
#  id: modbus_id
#  uart_id: uart_id
  
#modbus_controller:
#  - id: sdm
#    address: 1
#    modbus_id: modbus_id
#    setup_priority: -10 
#    update_interval: 20s
##################################################################################################

sensor:

################################# PT1000 HAT + SPI ABOVE ##############################################

#  - platform: max31865
#    name: "${friendly_name} PT1000-1"
#    id: pt1000_1
#    cs_pin: GPIO15
#    rtd_wires: 2
#    reference_resistance: "4020 Ω"
#    rtd_nominal_resistance: "1000 Ω"
#    mains_filter: 50 Hz
#    update_interval: 60s
#    filters:
#      - filter_out: nan
#      - lambda: return (x + id(temperature_pt1000_1_correction).state);


#  - platform: max31865
#    name: "${friendly_name} PT1000-2"
#    id: pt1000_2
#    cs_pin: GPIO05
#    rtd_wires: 2
#    reference_resistance: "4020 Ω"
#    rtd_nominal_resistance: "1000 Ω"
#    mains_filter: 50 Hz
#    update_interval: 60s
#    filters:
#      - filter_out: nan
#      - lambda: return (x + id(temperature_pt1000_2_correction).state);

################################# MAX31856 HAT (K TYPE DEFAULT) + SPI ABOVE ##############################################


#  - platform: max31856  #max31856
#    name: "${friendly_name} Pyrometer 1"
#    id: pyrometer1
#    cs_pin: GPIO15
#    thermocouple_type: K
#    mains_filter: 50 Hz
#    update_interval: 60s
#    filters:
#        - filter_out: nan
#        - lambda: return (x + id(temperature_pyr1_correction).state);

#  - platform: max31856
#    name: "${friendly_name} Pyrometer 2"
#    id: pyrometer2
#    cs_pin: GPIO05
#    thermocouple_type: K
#    mains_filter: 50 Hz
#    update_interval: 60s
#    filters:
#        - filter_out: nan
#        - lambda: return (x + id(temperature_pyr2_correction).state);


################################# DS18B20 EXAMPLE (MAX 5 SENSORS) ##############################################

#  - platform: dallas_temp                     
#    address: 0x2900000ed3c54a28    
#    name: "${friendly_name} S1"
#    id: s1
#    update_interval: 20s
#    filters:
#      - lambda: return (x + id(temperature_1_correction).state);

#  - platform: dallas_temp
#    address: 0xcc00000ed3625e28
#    name: "${friendly_name} S2"
#    id: s2
#    filters:
#      - lambda: return (x + id(temperature_2_correction).state);

##################################################################################################################

################################# SHT3X I2C SENSORS ##############################################

#  - platform: sht3xd
#    temperature:
#      name: "${friendly_name} SHT Temperature"
#    humidity:
#      name: "${friendly_name} SHT Humidity"
#    address: 0x44
#    update_interval: 60s

################################# BME280 I2C SENSORS ##############################################

  - platform: bme280_i2c
    temperature:
     name: "${friendly_name} BME280 Outside Temp"
     id: bme280_temperature
     oversampling: 16x
     filters:
      - filter_out: nan
    pressure:
      name: "${friendly_name} BME280 Atm Pressure"
      id: bme280_pressure
    humidity:
      name: "${friendly_name} BME280 Rel. Humidity"
      id: bme280_humidity
    address: 0x76
    update_interval: 60s

  - platform: template
    name: "${friendly_name} BME280 Abs. Humidity"
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(bme280_temperature).state) /
        (id(bme280_temperature).state + 243.5)) * id(bme280_humidity).state * mw) /
        ((273.15 + id(bme280_temperature).state) * r); // in grams/m^3
    accuracy_decimals: 2
    update_interval: 60s
    icon: 'mdi:water'
    unit_of_measurement: 'g/m³'
  - platform: template
    name: "${friendly_name} BME280 Dew Point"
    lambda: |-
      return (243.5*(log(id(bme280_humidity).state/100)+((17.67*id(bme280_temperature).state)/
      (243.5+id(bme280_temperature).state)))/(17.67-log(id(bme280_humidity).state/100)-
      ((17.67*id(bme280_temperature).state)/(243.5+id(bme280_temperature).state))));
    unit_of_measurement: °C
    icon: 'mdi:thermometer-alert'


################################# ANALOG INPUT (0-12 PREUSSURE SENSOR) ##############################################



  - platform: adc
    pin: GPIO36
    id: presure1
    name: "${friendly_name} Pressure 1"
    accuracy_decimals: 2
    update_interval: 60s
    attenuation: auto
    filters:
      - calibrate_linear:
            - 0.31 -> 0.00
            - 2.52 -> 10.2
    icon: 'mdi:gauge'
    unit_of_measurement: 'bar'


################################# 4-20 mA HAT ##############################################

#  - platform: adc
#    pin: GPIO34
#    id: ma1
#    name: "${friendly_name} 0-20mA 1"
#    accuracy_decimals: 2
#    update_interval: 60s
#    attenuation: auto
#    filters:
#      - calibrate_linear:
#            - 0.08 -> 0.50
#            - 0.62 -> 4.00
#            - 3.02 -> 20.00
#    icon: 'mdi:gauge'
#    unit_of_measurement: 'mA'

#  - platform: adc
#    pin: GPIO35
#    id: ma2
#    name: "${friendly_name} 0-20mA 2"
#    accuracy_decimals: 2
#    update_interval: 60s
#    attenuation: auto
#    filters:
#      - calibrate_linear:
#            - 0.08 -> 0.50
#            - 0.62 -> 4.00
#            - 3.02 -> 20.00
#    icon: 'mdi:gauge'
#    unit_of_measurement: 'mA'

################################# ULTRASONIC SESNSOR #####################################################

  - platform: ultrasonic
    id: oil_height
    name: "${friendly_name} Tank Height cm"  
    trigger_pin: GPIO32
    echo_pin: GPIO33
    pulse_time: 20us
    accuracy_decimals: 2
    timeout: 4.0m
    filters:
      - filter_out: nan
      - lambda: return (id(tank_height).state) - (x * 100);
    unit_of_measurement: "cm"
    icon: 'mdi:gas-station'

  - platform: template
    name: "${friendly_name} Tank Volume Ltr"
    id: tank_volume
    lambda: |-
      if (id(oil_height).state) {
        return (id(oil_height).state);
      } else {
        return 0.0;
      }
    filters:
       - lambda: return (x * (id(kibismos_tank).state)); 
    update_interval: 60s
    icon: 'mdi:tanker-truck'
    unit_of_measurement: 'L'
    accuracy_decimals: 2

  - platform: template
    name: "${friendly_name} Tank Vol %"
    id: tank_volume_per
    lambda: |-
      if (id(oil_height).state) {
        return (id(oil_height).state);
      } else {
        return 0.0;
      }
    filters:
       - lambda: return (( x / (id(tank_height).state) ) * 100 ); 
    update_interval: 60s
    icon: 'mdi:tanker-truck'
    unit_of_measurement: '%'
    accuracy_decimals: 0


  - platform: uptime
    name: "${friendly_name} Uptime"
    id: uptime_seconds
  - platform: wifi_signal
    name: "${friendly_name} WiFi Singnal"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "${friendly_name} WiFi Singnal %"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
 

################################# BINARY INPUTS ##############################################


binary_sensor:
  - platform: gpio
    name: "${friendly_name} Input 1"
    id: input1
    pin:
      number: GPIO16
      inverted: True
      mode: INPUT_PULLUP
#    device_class: heat
#    icon: 'mdi:fire-circle'
    filters:
     - delayed_on_off: 100ms

  - platform: gpio
    name: "${friendly_name} Input 2"
    id: input2
    pin:
      number: GPIO17
      inverted: True
      mode: INPUT_PULLUP
#    device_class: heat
#    icon: 'mdi:fire-circle'
    filters:
     - delayed_on_off: 100ms

switch:
  - platform: restart
    name: "${friendly_name} Restart"

  - platform: factory_reset
    name: "${friendly_name} Restart with Factory Default Settings"   


number:
  - platform: template
    name: "${friendly_name} Correction Temp S1"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 1 ##########
    id: temperature_1_correction
    optimistic: true
    initial_value: 0.00
    restore_value: yes
    min_value: -100.00
    max_value: 100.00
    step: 0.1
    icon: "mdi:thermometer-lines"
  - platform: template
    name: "${friendly_name} Correction Temp S2"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 2 ##########
    id: temperature_2_correction
    optimistic: true
    initial_value: 0.00
    restore_value: yes
    min_value: -100.00
    max_value: 100.00
    step: 0.1
    icon: "mdi:thermometer-lines"
  - platform: template
    name: "${friendly_name} Correction Temp S3"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 3 ##########
    id: temperature_3_correction
    optimistic: true
    initial_value: 0.0
    restore_value: yes
    min_value: -100.0
    max_value: 100.0
    step: 0.1
    icon: "mdi:thermometer-lines"
  - platform: template
    name: "${friendly_name} Correction Temp S4"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 4 ##########
    id: temperature_4_correction
    optimistic: true
    initial_value: 0.0
    restore_value: yes
    min_value: -100.0
    max_value: 100.0
    step: 0.1
    icon: "mdi:thermometer-lines"
  - platform: template
    name: "${friendly_name} Correction Temp S5"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 5 ##########
    id: temperature_5_correction
    optimistic: true
    initial_value: 0.00
    restore_value: yes
    min_value: -100.0
    max_value: 100.0
    step: 0.1
    icon: "mdi:thermometer-lines"


  - platform: template
    name: "${friendly_name} Correction Pressure 1"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΠΙΕΣΗ 1 ##########
    id: pressure_1_correction
    optimistic: true
    initial_value: 0.0
    restore_value: yes
    min_value: -30.0
    max_value: 30.0
    step: 0.1


  - platform: template
    name: "${friendly_name} Pressure 1 Low Setting"
    id: pressure_1_low_setting
    optimistic: true
    initial_value: 1.0
    min_value: -2.0
    max_value: 12.0
    step: 0.1
    icon: "mdi:car-brake-low-pressure"
    restore_value: yes
    mode: box

  - platform: template
    name: "${friendly_name} Pressure 1 High Setting"
    id: pressure_1_high_setting
    optimistic: true
    initial_value: 3.0
    min_value: -2.0
    max_value: 12.0
    step: 0.1
    icon: "mdi:car-brake-low-pressure"
    restore_value: yes
    mode: box

  - platform: template
    name: "${friendly_name} Tank Level Setting cm"
    id: "tank_height"
    optimistic: true
    initial_value: 0.00
    restore_value: yes
    min_value: 0.00
    max_value: 400.00
    step: 0.01
    icon: "mdi:format-line-height"
  - platform: template
    name: "${friendly_name} Volume L at 1cm"   # V = π * radius² * 1000 *   { tank_height }
    id: "kibismos_tank"
    optimistic: true
    initial_value: 10.000
    restore_value: yes
    min_value: 0.000
    max_value: 50.000
    step: 0.001
    icon: "mdi:cube-outline"

############################### HTTP Update ########################################



text_sensor:
#DEBUG TEXT SRENSORS
#  - platform: debug
#    device:
#      name: "Device Info"
#    reset_reason:
#      name: "Reset Reason"
  - platform: version
    name: "${friendly_name} Version"
    hide_timestamp: true
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
    ssid:
      name: "${friendly_name} Connected SSID"
#    bssid:
#      name: "ESP Connected BSSID"
    mac_address:
      name: "${friendly_name} ESP Mac Wifi Address"
