###############################################################################################

###     DO NOT FLASH IT AS IT IS - DALLAS CODES MISSING FROM IMPORTED CONFIG YAML !!!    ######

###                             SMART HOME HELLAS                                          ###

###      first time flash with https://adafruit.github.io/Adafruit_WebSerial_ESPTool/      ###
###############################################################################################

substitutions:
  name: "shh-mon"
  friendly_name: "SHH MON"
  project_name: "Smart Home Hellas.SHH-MON"
  project_version: "3.0"
  device_description: "Smart Home Hellas Monitoring Device"



esphome:
  name: "${name}"
  name_add_mac_suffix: true
  project:
    name: ${project_name}
    version: ${project_version}

esp32:
  board: lolin_s2_mini
  variant: ESP32S2
  framework:
    type: arduino

dashboard_import:
  package_import_url: github://thanoskas/Smart-Home-Hellas/main/shh-mon.yaml
  import_full_config: false # or true

# Enable logging
logger:
  level: DEBUG



# Enable Home Assistant API
api:
   reboot_timeout: 0s #360min

wifi:
  use_address: 192.168.31.154
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password 

  ap:
    password: !secret gen_password

captive_portal:


http_request:
  verify_ssl: false

ota:
  - platform: esphome
    password: !secret gen_password
  - platform: http_request

web_server:
  version: 3
  local: true
  port: 80
  auth:
    username: admin
    password: !secret gen_password


  
status_led:
  pin:
    inverted: true
    number: GPIO15



i2c:
  sda: 33
  scl: 35
  scan: True


one_wire:
  - platform: gpio
    pin: GPIO16



sensor:

#  - platform: dallas_temp
#    address: XXXXXXXXXXXXXXXXXXXX
#    name: "${friendly_name} Dallas S1" #Θερμοκρασία 1
#    id: S1
#    update_interval: 60s
#    filters:
#      - filter_out: nan
#      - lambda: return (x + id(temperature_1_correction).state);
   


  - platform: bme280_i2c
    temperature:
     name: "${friendly_name} BME280 Outside Temp"
     id: bme280_temperature
     oversampling: 16x
     filters:
      - filter_out: nan

    pressure:
      name: "${friendly_name} BME280 Atm Pressure"
      id: bme280_pressure
    humidity:
      name: "${friendly_name} BME280 Rel. Humidity"
      id: bme280_humidity
    address: 0x76
    update_interval: 60s

  - platform: template
    name: "${friendly_name} BME280 Abs. Humidity"
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(bme280_temperature).state) /
        (id(bme280_temperature).state + 243.5)) * id(bme280_humidity).state * mw) /
        ((273.15 + id(bme280_temperature).state) * r); // in grams/m^3
    accuracy_decimals: 2
    update_interval: 60s
    icon: 'mdi:water'
    unit_of_measurement: 'g/m³'
  - platform: template
    name: "${friendly_name} BME280 Dew Point"
    lambda: |-
      return (243.5*(log(id(bme280_humidity).state/100)+((17.67*id(bme280_temperature).state)/
      (243.5+id(bme280_temperature).state)))/(17.67-log(id(bme280_humidity).state/100)-
      ((17.67*id(bme280_temperature).state)/(243.5+id(bme280_temperature).state))));
    unit_of_measurement: °C
    icon: 'mdi:thermometer-alert'



  - platform: adc
    pin: GPIO3
    id: presure1
    name: "${friendly_name} Pressure 1"
    accuracy_decimals: 2
    update_interval: 60s
    attenuation: auto
    filters:
      - calibrate_linear:
            - 0.31 -> 0.00
            - 2.52 -> 10.2
      - lambda: return (x + id(pressure_1_correction).state);
    icon: 'mdi:gauge'
    unit_of_measurement: 'bar'


  - platform: ultrasonic
    id: liquid_level
    name: "${friendly_name} Liquid Level cm"  
    trigger_pin: GPIO39
    echo_pin: GPIO37
#    pulse_time: 20us
    accuracy_decimals: 2
    timeout: 4.0m
    filters:
      - filter_out: nan
#      - sliding_window_moving_average:
#          window_size: 10
#          send_every: 10
#          send_first_at: 1
      - lambda: return (id(tank_height).state) - (x * 100);
    unit_of_measurement: "cm"
    icon: 'mdi:gas-station'




  - platform: template
    name: "${friendly_name} Tank Volume Ltr"
    id: tank_volume
    lambda: |-
      if (id(liquid_level).state) {
        return (id(liquid_level).state);
      } else {
        return 0.0;
      }
    filters:
       - lambda: return (x * (id(kibismos_tank).state)); 
    update_interval: 60s
    icon: 'mdi:tanker-truck'
    unit_of_measurement: 'L'
    accuracy_decimals: 2

  - platform: template
    name: "${friendly_name} Tank Vol %"
    id: tank_volume_per
    lambda: |-
      if (id(liquid_level).state) {
        return (id(liquid_level).state);
      } else {
        return 0.0;
      }
    filters:
       - lambda: return (( x / (id(tank_height).state) ) * 100 ); 
    update_interval: 60s
    icon: 'mdi:tanker-truck'
    unit_of_measurement: '%'
    accuracy_decimals: 0

  - platform: uptime
    name: "${friendly_name} Uptime"
    id: uptime_seconds
  - platform: wifi_signal
    name: "${friendly_name} WiFi Singnal"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "${friendly_name} WiFi Singnal %"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
 
binary_sensor:
  - platform: gpio
    name: "${friendly_name} Input 1"
    id: input1
    pin:
      number: GPIO07
      inverted: True
      mode: INPUT_PULLUP
#    device_class: heat
#    icon: 'mdi:fire-circle'
    filters:
     - delayed_on_off: 100ms

  - platform: gpio
    name: "${friendly_name} Input 2"
    id: input2
    pin:
      number: GPIO05
      inverted: True
      mode: INPUT_PULLUP
#    device_class: heat
#    icon: 'mdi:fire-circle'
    filters:
     - delayed_on_off: 100ms
    
switch:
  - platform: restart
    name: "${friendly_name} Restart"

  - platform: factory_reset
    name: "${friendly_name} Restart with Factory Default Settings"   

button:
  - platform: template
    name: "${friendly_name} Start HTTP Update"
    id: update_firmware
    entity_category: "config"
    on_press: 
      then:
        - ota.http_request.flash:
            md5_url: !secret md5_url
            url: !secret url
#(Get-FileHash -Path firmware.ota.bin -Algorithm md5).Hash.ToLower() | Out-File -FilePath firmware.md5 -Encoding ASCII


number:
  - platform: template
    name: "${friendly_name} Correction Temp S1"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 1 ##########
    id: temperature_1_correction
    optimistic: true
    initial_value: 0.00
    restore_value: yes
    min_value: -100.00
    max_value: 100.00
    step: 0.1
    icon: "mdi:thermometer-lines"
  - platform: template
    name: "${friendly_name} Correction Temp S2"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 2 ##########
    id: temperature_2_correction
    optimistic: true
    initial_value: 0.00
    restore_value: yes
    min_value: -100.00
    max_value: 100.00
    step: 0.1
    icon: "mdi:thermometer-lines"
  - platform: template
    name: "${friendly_name} Correction Temp S3"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 3 ##########
    id: temperature_3_correction
    optimistic: true
    initial_value: 0.0
    restore_value: yes
    min_value: -100.0
    max_value: 100.0
    step: 0.1
    icon: "mdi:thermometer-lines"
  - platform: template
    name: "${friendly_name} Correction Temp S4"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 4 ##########
    id: temperature_4_correction
    optimistic: true
    initial_value: 0.0
    restore_value: yes
    min_value: -100.0
    max_value: 100.0
    step: 0.1
    icon: "mdi:thermometer-lines"
  - platform: template
    name: "${friendly_name} Correction Temp S5"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΘΕΡΜΟΚΡΑΣΙΑ 5 ##########
    id: temperature_5_correction
    optimistic: true
    initial_value: 0.00
    restore_value: yes
    min_value: -100.0
    max_value: 100.0
    step: 0.1
    icon: "mdi:thermometer-lines"


  - platform: template
    name: "${friendly_name} Correction Pressure 1"  ### ΧΕΙΡΟΚΙΝΗΤΗ ΔΙΟΡΘΩΣΗ ΠΙΕΣΗ 1 ##########
    id: pressure_1_correction
    optimistic: true
    initial_value: 0.0
    restore_value: yes
    min_value: -30.0
    max_value: 30.0
    step: 0.1


  - platform: template
    name: "${friendly_name} Pressure 1 Low Setting"
    id: pressure_1_low_setting
    optimistic: true
    initial_value: 1.0
    min_value: -2.0
    max_value: 12.0
    step: 0.1
    icon: "mdi:car-brake-low-pressure"
    restore_value: yes
    mode: box

  - platform: template
    name: "${friendly_name} Pressure 1 High Setting"
    id: pressure_1_high_setting
    optimistic: true
    initial_value: 3.0
    min_value: -2.0
    max_value: 12.0
    step: 0.1
    icon: "mdi:car-brake-low-pressure"
    restore_value: yes
    mode: box

  - platform: template
    name: "${friendly_name} Tank Level Setting cm"
    id: "tank_height"
    optimistic: true
    initial_value: 0.00
    restore_value: yes
    min_value: 0.00
    max_value: 400.00
    step: 0.01
    icon: "mdi:format-line-height"
  - platform: template
    name: "${friendly_name} Volume L at 1cm"   # V = π * radius² * 1000 *   { tank_height }
    id: "kibismos_tank"
    optimistic: true
    initial_value: 10.000
    restore_value: yes
    min_value: 0.000
    max_value: 50.000
    step: 0.001
    icon: "mdi:cube-outline"

#######################################################################

text_sensor:
#DEBUG TEXT SRENSORS
#  - platform: debug
#    device:
#      name: "Device Info"
#    reset_reason:
#      name: "Reset Reason"
  - platform: version
    name: "${friendly_name} Version"
    hide_timestamp: true
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
    ssid:
      name: "${friendly_name} Connected SSID"
#    bssid:
#      name: "ESP Connected BSSID"
    mac_address:
      name: "${friendly_name} ESP Mac Wifi Address"